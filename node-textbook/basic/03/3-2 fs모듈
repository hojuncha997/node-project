1. FS(file system) 모듈
    : 파일의 내용을 읽거나 기록하는 등 파일을 관리할 때 사용하는 모듈이다.
    fs 모듈은 파일과 디렉터리 살펴보기, 새로운 파일, 디렉토리 만들기 파일 스트리밍 등 
    파일이나 디렉터리를 사용하면서 필요한

2. 비동기 처리 방법에 따라 사용하는 함수가 다르다

    3가지로 구분된다.

    - 프라미스에서 사용하는 함수
    - 콜백에서 사용하는 함수
    - 동기처리에 사용하는 함수

    비동기처리를 한다는 것은 실행하는 데 걸리는 시간을 고려해서 실행순서를 조절하는 것을 의미한다.
    비동기로 처리할 때 사용하는 방법이 콜백과 프라미스이다.

    애플리케이션을 작성하기 전에 동기 처리와 비동기 처리 가운데 어떤 것을 사용할지 결정하고,
    비동기 처리를 선택할 경우에도 콜백과 프라미스 가운데 사용할 것을 미리 결정해야 한다.
    
    그에 따라 fs모듈에서 사용할 함수를 선택한다.
    노드에서 FS모듈 설명부분을 보면 관련 함수들에 대한 설명을 확인할 수 있다.

    크기가 큰 파일은 비동기로 처리하는 것이 좋다. 동기처리를 하면 읽거나 쓰는 동작 하나가 끝나야 다음 동작을 처리하기 때문이다.

3. FS모듈 가져오기

    const fs = require("fs")

    fs모듈을 가져온 이후에는 fs.함수명을 사용해서 함수를 사용한다.

    예시)
    const fs = require("fs");
    fs.readFile("example.txt", (err, data) => {...});

4. 현재 디렉토리 읽기
    : fs모듈에는 현재 디렉토리 파일을 확인할 수 있는 readdirSync함수와 readdir함수가 있다.
     readdirSync: 동기
     readdir: 비동기

    4.1. 동기함수로 읽기: ./list-1.js 파일 참조
     fs.readdirSync(경로[, 인코딩옵션]) //인코딩 옵션은 utf-8이 기본이다.

    4.2. 비동기함수로 읽기:
    fs.readdir(경로[, 인코딩옵션], 콜백)

    디렉토리 읽기를 비동기로 처리한다는 것은 읽는 동안 빠르게 처리할 수 있는 다른 일부터 처리하라는 것이다.
    그리고 읽기가 끝나고 나면 콜백함수에 지정한 일을 하라는 의미이다. 

