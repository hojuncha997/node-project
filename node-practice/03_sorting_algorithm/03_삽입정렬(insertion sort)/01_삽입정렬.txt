1. 삽입정렬(insertion sort):
    - 삽입정렬이란 각 숫자를 적절한 위치에 삽입하는 정렬 기법이다.


2. 삽입정렬의 동작방식:
    - 1. 각 단계에서 현재 원소가 삽입될 위치를 찾는다.
    - 2. 적절한 위치에 도착할 때까지 반복적으로 왼쪽으로 이동한다.

3. 삽입정렬 예시
    - 정렬할 배열: [2,4,3,1,9,6,8,7,5]
    - 삽입 정렬을 수행할 때는 처음에 첫 번째 원소는 정렬이 돼 있다고 고려한다. 왜냐하면 두 번째 원소부터 왼쪽을 보면서
        어디로 들어갈지 삽입할 위치를 고르는 방식이기 때문이다.

    [1단계] [2,4,3,1,9,6,8,7,5] : 왼쪽이 더 작기 때문에 4는 가만히 있었음
    [2단계] [2,3,4,1,9,6,8,7,5] : 3이 더 작기 떄문에 4와 위치를 바꾸었음
    [3단계] [1,2,3,4,9,6,8,7,5] : 1이 더 가장 작기 때문에 4,3,2와 차례로 비교한 후 맨 앞으로 이동
    [4단계] [1,2,3,4,9,6,8,7,5] : 4가 더 작기 때문에 9는 제자리
    [5단계] [1,2,3,4,6,9,8,7,5] : 6이 더 작기 때문에 9와 위치 변경 
    [6단계] [1,2,3,4,6,8,9,7,5] 
    [7단계] [1,2,3,4,6,7,8,9,5]
    [8단계-완료] [1,2,3,4,5,6,7,8,9] 


4. 삽입정렬의 시간 복잡도

    - 삽입 정렬이란 각 원소를 적절한 위치에 삽입하는 정렬 기법이다.
    - 매 단계에서 현재 처리 중인 원소가 삽입될 위치를 찾기 위해 약 N번의 연산이 필요하다.
    - 결과적으로 N개의 단계를 거친다는 점에서 최악의 경우 O(N^2)의 시간 복잡도를 가진다.
    - 최선의 경우에는 O(N)만큼의 복잡도를 가질 수 있다. 따라서 삽입 정렬은 실무적 관점에서 일반적으로 선택정렬이나 버블정렬보다 빠르다고 여겨진다.
    - 하지만 최악의 경우에는 N^2 만큼의 시간복잡도를 가진다는 점에서 비효율적인 알고리즘의 하나로 여겨진다.